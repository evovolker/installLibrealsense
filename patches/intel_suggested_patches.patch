diff --git a/drivers/iio/accel/hid-sensor-accel-3d.c b/drivers/iio/accel/hid-sensor-accel-3d.c
index 15b55a30e46f..ab1e238d5c75 100644
--- a/drivers/iio/accel/hid-sensor-accel-3d.c
+++ b/drivers/iio/accel/hid-sensor-accel-3d.c
@@ -42,13 +42,11 @@ struct accel_3d_state {
 	struct hid_sensor_hub_callbacks callbacks;
 	struct hid_sensor_common common_attributes;
 	struct hid_sensor_hub_attribute_info accel[ACCEL_3D_CHANNEL_MAX];
-	/* Reserve for 3 channels + padding + timestamp */
-	u32 accel_val[ACCEL_3D_CHANNEL_MAX + 3];
+	u32 accel_val[ACCEL_3D_CHANNEL_MAX];
 	int scale_pre_decml;
 	int scale_post_decml;
 	int scale_precision;
 	int value_offset;
-	int64_t timestamp;
 };
 
 static const u32 accel_3d_addresses[ACCEL_3D_CHANNEL_MAX] = {
@@ -89,8 +87,7 @@ static const struct iio_chan_spec accel_3d_channels[] = {
 		BIT(IIO_CHAN_INFO_SAMP_FREQ) |
 		BIT(IIO_CHAN_INFO_HYSTERESIS),
 		.scan_index = CHANNEL_SCAN_INDEX_Z,
-	},
-	IIO_CHAN_SOFT_TIMESTAMP(3)
+	}
 };
 
 /* Adjust channel real bits based on report descriptor */
@@ -195,11 +192,11 @@ static const struct iio_info accel_3d_info = {
 };
 
 /* Function to push data to buffer */
-static void hid_sensor_push_data(struct iio_dev *indio_dev, void *data,
-				 int len, int64_t timestamp)
+static void hid_sensor_push_data(struct iio_dev *indio_dev, const void *data,
+	int len)
 {
 	dev_dbg(&indio_dev->dev, "hid_sensor_push_data\n");
-	iio_push_to_buffers_with_timestamp(indio_dev, data, timestamp);
+	iio_push_to_buffers(indio_dev, data);
 }
 
 /* Callback handler to send event after all samples are received and captured */
@@ -211,17 +208,10 @@ static int accel_3d_proc_event(struct hid_sensor_hub_device *hsdev,
 	struct accel_3d_state *accel_state = iio_priv(indio_dev);
 
 	dev_dbg(&indio_dev->dev, "accel_3d_proc_event\n");
-	if (atomic_read(&accel_state->common_attributes.data_ready)) {
-		if (!accel_state->timestamp)
-			accel_state->timestamp = iio_get_time_ns(indio_dev);
-
+	if (atomic_read(&accel_state->common_attributes.data_ready))
 		hid_sensor_push_data(indio_dev,
-				     accel_state->accel_val,
-				     sizeof(accel_state->accel_val),
-				     accel_state->timestamp);
-
-		accel_state->timestamp = 0;
-	}
+				accel_state->accel_val,
+				sizeof(accel_state->accel_val));
 
 	return 0;
 }
@@ -246,10 +236,6 @@ static int accel_3d_capture_sample(struct hid_sensor_hub_device *hsdev,
 						*(u32 *)raw_data;
 		ret = 0;
 	break;
-	case HID_USAGE_SENSOR_TIME_TIMESTAMP: // usec->nsec
-		accel_state->timestamp = (*(int64_t *)raw_data)*1000;
-		ret = 0;
-	break;
 	default:
 		break;
 	}
diff --git a/drivers/iio/gyro/hid-sensor-gyro-3d.c b/drivers/iio/gyro/hid-sensor-gyro-3d.c
index 859cddec1889..c67ce2ac4715 100644
--- a/drivers/iio/gyro/hid-sensor-gyro-3d.c
+++ b/drivers/iio/gyro/hid-sensor-gyro-3d.c
@@ -42,13 +42,11 @@ struct gyro_3d_state {
 	struct hid_sensor_hub_callbacks callbacks;
 	struct hid_sensor_common common_attributes;
 	struct hid_sensor_hub_attribute_info gyro[GYRO_3D_CHANNEL_MAX];
-	/* Reserve for 3 channels + padding + timestamp */
-	u32 gyro_val[GYRO_3D_CHANNEL_MAX + 3];
+	u32 gyro_val[GYRO_3D_CHANNEL_MAX];
 	int scale_pre_decml;
 	int scale_post_decml;
 	int scale_precision;
 	int value_offset;
-	int64_t timestamp;
 };
 
 static const u32 gyro_3d_addresses[GYRO_3D_CHANNEL_MAX] = {
@@ -89,8 +87,7 @@ static const struct iio_chan_spec gyro_3d_channels[] = {
 		BIT(IIO_CHAN_INFO_SAMP_FREQ) |
 		BIT(IIO_CHAN_INFO_HYSTERESIS),
 		.scan_index = CHANNEL_SCAN_INDEX_Z,
-	},
-	IIO_CHAN_SOFT_TIMESTAMP(3)
+	}
 };
 
 /* Adjust channel real bits based on report descriptor */
@@ -195,11 +192,11 @@ static const struct iio_info gyro_3d_info = {
 };
 
 /* Function to push data to buffer */
-static void hid_sensor_push_data(struct iio_dev *indio_dev, void *data,
-				 int len, int64_t timestamp)
+static void hid_sensor_push_data(struct iio_dev *indio_dev, const void *data,
+	int len)
 {
 	dev_dbg(&indio_dev->dev, "hid_sensor_push_data\n");
-	iio_push_to_buffers_with_timestamp(indio_dev, data, timestamp);
+	iio_push_to_buffers(indio_dev, data);
 }
 
 /* Callback handler to send event after all samples are received and captured */
@@ -211,17 +208,10 @@ static int gyro_3d_proc_event(struct hid_sensor_hub_device *hsdev,
 	struct gyro_3d_state *gyro_state = iio_priv(indio_dev);
 
 	dev_dbg(&indio_dev->dev, "gyro_3d_proc_event\n");
-	if (atomic_read(&gyro_state->common_attributes.data_ready)) {
-		if (!gyro_state->timestamp)
-			gyro_state->timestamp = iio_get_time_ns(indio_dev);
-
+	if (atomic_read(&gyro_state->common_attributes.data_ready))
 		hid_sensor_push_data(indio_dev,
 				gyro_state->gyro_val,
-				sizeof(gyro_state->gyro_val),
-				gyro_state->timestamp);
-
-		gyro_state->timestamp = 0;
-	}
+				sizeof(gyro_state->gyro_val));
 
 	return 0;
 }
@@ -246,10 +236,6 @@ static int gyro_3d_capture_sample(struct hid_sensor_hub_device *hsdev,
 						*(u32 *)raw_data;
 		ret = 0;
 	break;
-	case HID_USAGE_SENSOR_TIME_TIMESTAMP:	// usec->nsec
-		gyro_state->timestamp = (*(int64_t *)raw_data)*1000;
-		ret = 0;
-	break;
 	default:
 		break;
 	}
diff --git a/drivers/media/usb/uvc/Makefile b/drivers/media/usb/uvc/Makefile
index d86cf22155d1..c26d12fdb8f4 100644
--- a/drivers/media/usb/uvc/Makefile
+++ b/drivers/media/usb/uvc/Makefile
@@ -1,4 +1,3 @@
-CONFIG_MODULE_SIG=n
 uvcvideo-objs  := uvc_driver.o uvc_queue.o uvc_v4l2.o uvc_video.o uvc_ctrl.o \
 		  uvc_status.o uvc_isight.o uvc_debugfs.o
 ifeq ($(CONFIG_MEDIA_CONTROLLER),y)
diff --git a/drivers/media/usb/uvc/uvc_driver.c b/drivers/media/usb/uvc/uvc_driver.c
index 163b9b10cd94..f4d55613b311 100644
--- a/drivers/media/usb/uvc/uvc_driver.c
+++ b/drivers/media/usb/uvc/uvc_driver.c
@@ -169,103 +169,6 @@ static struct uvc_format_desc uvc_fmts[] = {
 		.guid		= UVC_GUID_FORMAT_RW10,
 		.fcc		= V4L2_PIX_FMT_SRGGB10P,
 	},
-	{
-		.name		= "Raw data 8-bit (RAW8)",
-		.guid		= UVC_GUID_FORMAT_RAW8,
-		.fcc		= V4L2_PIX_FMT_GREY,
-	},
-	{
-		.name		= "Raw data 16-bit (RW16)",
-		.guid		= UVC_GUID_FORMAT_RW16,
-		.fcc		= V4L2_PIX_FMT_RW16,
-	},
-	{
-		.name		= "Depth 16-bit (INVZ)",
-		.guid		= UVC_GUID_FORMAT_INVZ,
-		.fcc		= V4L2_PIX_FMT_Z16,
-	},
-	{
-		.name		= "Depth:IR 16:8 24-bit (INZI)",
-		.guid		= UVC_GUID_FORMAT_INZI,
-		.fcc		= V4L2_PIX_FMT_INZI,
-	},
-	{
-		.name		= "Depth 16-bit (INVR)",
-		.guid		= UVC_GUID_FORMAT_INVR,
-		.fcc		= V4L2_PIX_FMT_INVR,
-	},
-	{
-		.name		= "Depth:IR 16:8 24-bit (INRI)",
-		.guid		= UVC_GUID_FORMAT_INRI,
-		.fcc		= V4L2_PIX_FMT_INRI,
-	},
-	{
-		.name		= "Infrared 8-bit (INVI)",
-		.guid		= UVC_GUID_FORMAT_INVI,
-		.fcc		= V4L2_PIX_FMT_GREY,
-	},
-	{
-		.name		= "FlickerIR 8-bit (RELI)",
-		.guid		= UVC_GUID_FORMAT_RELI,
-		.fcc		= V4L2_PIX_FMT_RELI,
-	},
-	{
-		.name		= "Luminosity data 8-bit (L8)",
-		.guid		= UVC_GUID_FORMAT_L8,
-		.fcc		= V4L2_PIX_FMT_GREY,
-	},
-	{
-		.name		= "Luminosity data 16-bit (L16)",
-		.guid		= UVC_GUID_FORMAT_L16,
-		.fcc		= V4L2_PIX_FMT_Y16,
-	},
-	{
-		.name		= "Depth data 16-bit (D16)",
-		.guid		= UVC_GUID_FORMAT_D16,
-		.fcc		= V4L2_PIX_FMT_Z16,
-	},
-	{
-		.name		= "16-bit Bayer BGBG/GRGR",
-		.guid		= UVC_GUID_FORMAT_BAYER16,
-		.fcc		= V4L2_PIX_FMT_SBGGR16,
-	},
-	{
-		.name		= "Packed raw data 10-bit",
-		.guid		= UVC_GUID_FORMAT_W10,
-		.fcc		= V4L2_PIX_FMT_W10,
-	},
-	{
-		.name		= "Confidence data (C   )",
-		.guid		= UVC_GUID_FORMAT_CONFIDENCE_MAP,
-		.fcc		= V4L2_PIX_FMT_CONFIDENCE_MAP,
-	},
-	/* FishEye 8-bit monochrome */
-	{
-		.name		= "Raw data 8-bit (RAW8)",
-		.guid		= UVC_GUID_FORMAT_RAW8,
-		.fcc		= V4L2_PIX_FMT_GREY,
-	},
-	/* Legacy/Development formats for backward-compatibility*/
-	{
-		.name		= "Raw data 16-bit (RW16)",
-		.guid		= UVC_GUID_FORMAT_RW16,
-		.fcc		= V4L2_PIX_FMT_RW16,
-	},
-	{
-		.name		= "Frame Grabber (FG  )",
-		.guid		= UVC_GUID_FORMAT_FG,
-		.fcc		= V4L2_PIX_FMT_FG,
-	},
-	{
-		.name		= "SR300 Depth/Confidence (INZC)",
-		.guid		= UVC_GUID_FORMAT_INZC,
-		.fcc		= V4L2_PIX_FMT_INZC,
-	},
-	{
-		.name		= "Relative IR (PAIR)",
-		.guid		= UVC_GUID_FORMAT_PAIR,
-		.fcc		= V4L2_PIX_FMT_PAIR,
-	},
 };
 
 /* ------------------------------------------------------------------------
@@ -2770,186 +2673,6 @@ static struct usb_device_id uvc_ids[] = {
 	  .bInterfaceSubClass	= 1,
 	  .bInterfaceProtocol	= 0,
 	  .driver_info		= UVC_QUIRK_FORCE_Y8 },
-	/* Intel D400/PSR depth camera*/
-	{ .match_flags		= USB_DEVICE_ID_MATCH_DEVICE
-				| USB_DEVICE_ID_MATCH_INT_INFO,
-	  .idVendor			= 0x8086,
-	  .idProduct		= 0x0ad1,
-	  .bInterfaceClass	= USB_CLASS_VIDEO,
-	  .bInterfaceSubClass	= 1,
-	  .bInterfaceProtocol	= 0,
-	  .driver_info		= UVC_QUIRK_APPEND_UVC_HEADER },
-	  /* Intel D410/ASR depth camera */
-	{ .match_flags		= USB_DEVICE_ID_MATCH_DEVICE
-				| USB_DEVICE_ID_MATCH_INT_INFO,
-	  .idVendor			= 0x8086,
-	  .idProduct		= 0x0ad2,
-	  .bInterfaceClass	= USB_CLASS_VIDEO,
-	  .bInterfaceSubClass	= 1,
-	  .bInterfaceProtocol	= 0,
-	  .driver_info		= UVC_QUIRK_APPEND_UVC_HEADER },
-	  /* Intel D415/ASRC depth camera */
-	{ .match_flags		= USB_DEVICE_ID_MATCH_DEVICE
-				| USB_DEVICE_ID_MATCH_INT_INFO,
-	  .idVendor			= 0x8086,
-	  .idProduct		= 0x0ad3,
-	  .bInterfaceClass	= USB_CLASS_VIDEO,
-	  .bInterfaceSubClass	= 1,
-	  .bInterfaceProtocol	= 0,
-	  .driver_info		= UVC_QUIRK_APPEND_UVC_HEADER },
-	  /* Intel D430/AWG depth camera */
-	{ .match_flags		= USB_DEVICE_ID_MATCH_DEVICE
-				| USB_DEVICE_ID_MATCH_INT_INFO,
-	  .idVendor			= 0x8086,
-	  .idProduct		= 0x0ad4,
-	  .bInterfaceClass	= USB_CLASS_VIDEO,
-	  .bInterfaceSubClass	= 1,
-	  .bInterfaceProtocol	= 0,
-	  .driver_info		= UVC_QUIRK_APPEND_UVC_HEADER },
-	/* Intel D450/AWGT depth camera */
-	{ .match_flags		= USB_DEVICE_ID_MATCH_DEVICE
-				| USB_DEVICE_ID_MATCH_INT_INFO,
-	  .idVendor			= 0x8086,
-	  .idProduct		= 0x0ad5,
-	  .bInterfaceClass	= USB_CLASS_VIDEO,
-	  .bInterfaceSubClass	= 1,
-	  .bInterfaceProtocol	= 0,
-	  .driver_info		= UVC_QUIRK_APPEND_UVC_HEADER },
-	  /* Intel D400 IMU Module */
-	{ .match_flags		= USB_DEVICE_ID_MATCH_DEVICE
-				| USB_DEVICE_ID_MATCH_INT_INFO,
-	  .idVendor			= 0x8086,
-	  .idProduct		= 0x0af2,
-	  .bInterfaceClass	= USB_CLASS_VIDEO,
-	  .bInterfaceSubClass	= 1,
-	  .bInterfaceProtocol	= 0,
-	  .driver_info		= UVC_QUIRK_APPEND_UVC_HEADER },
-	/* Intel D420/PWG depth camera */
-	{ .match_flags		= USB_DEVICE_ID_MATCH_DEVICE
-				| USB_DEVICE_ID_MATCH_INT_INFO,
-	  .idVendor			= 0x8086,
-	  .idProduct		= 0x0af6,
-	  .bInterfaceClass	= USB_CLASS_VIDEO,
-	  .bInterfaceSubClass	= 1,
-	  .bInterfaceProtocol	= 0,
-	  .driver_info		= UVC_QUIRK_APPEND_UVC_HEADER },
-	/* Intel D420_MM/PWGT depth camera */
-	{ .match_flags		= USB_DEVICE_ID_MATCH_DEVICE
-				| USB_DEVICE_ID_MATCH_INT_INFO,
-	  .idVendor			= 0x8086,
-	  .idProduct		= 0x0afe,
-	  .bInterfaceClass	= USB_CLASS_VIDEO,
-	  .bInterfaceSubClass	= 1,
-	  .bInterfaceProtocol	= 0,
-	  .driver_info		= UVC_QUIRK_APPEND_UVC_HEADER },
-	  /* Intel D410_MM/ASRT depth camera */
-	{ .match_flags		= USB_DEVICE_ID_MATCH_DEVICE
-				| USB_DEVICE_ID_MATCH_INT_INFO,
-	  .idVendor			= 0x8086,
-	  .idProduct		= 0x0aff,
-	  .bInterfaceClass	= USB_CLASS_VIDEO,
-	  .bInterfaceSubClass	= 1,
-	  .bInterfaceProtocol	= 0,
-	  .driver_info		= UVC_QUIRK_APPEND_UVC_HEADER },
-	  /* Intel D400_MM/PSRT depth camera */
-	{ .match_flags		= USB_DEVICE_ID_MATCH_DEVICE
-				| USB_DEVICE_ID_MATCH_INT_INFO,
-	  .idVendor			= 0x8086,
-	  .idProduct		= 0x0b00,
-	  .bInterfaceClass	= USB_CLASS_VIDEO,
-	  .bInterfaceSubClass	= 1,
-	  .bInterfaceProtocol	= 0,
-	  .driver_info		= UVC_QUIRK_APPEND_UVC_HEADER },
-	  /* Intel D430_MM/AWGCT depth camera */
-	{ .match_flags		= USB_DEVICE_ID_MATCH_DEVICE
-				| USB_DEVICE_ID_MATCH_INT_INFO,
-	  .idVendor			= 0x8086,
-	  .idProduct		= 0x0b01,
-	  .bInterfaceClass	= USB_CLASS_VIDEO,
-	  .bInterfaceSubClass	= 1,
-	  .bInterfaceProtocol	= 0,
-	  .driver_info		= UVC_QUIRK_APPEND_UVC_HEADER },
-	  /* Intel D460/DS5U depth camera */
-	{ .match_flags		= USB_DEVICE_ID_MATCH_DEVICE
-				| USB_DEVICE_ID_MATCH_INT_INFO,
-	  .idVendor			= 0x8086,
-	  .idProduct		= 0x0b03,
-	  .bInterfaceClass	= USB_CLASS_VIDEO,
-	  .bInterfaceSubClass	= 1,
-	  .bInterfaceProtocol	= 0,
-	  .driver_info		= UVC_QUIRK_APPEND_UVC_HEADER },
-	  /* Intel D435/AWGC depth camera */
-	{ .match_flags		= USB_DEVICE_ID_MATCH_DEVICE
-				| USB_DEVICE_ID_MATCH_INT_INFO,
-	  .idVendor			= 0x8086,
-	  .idProduct		= 0x0b07,
-	  .bInterfaceClass	= USB_CLASS_VIDEO,
-	  .bInterfaceSubClass	= 1,
-	  .bInterfaceProtocol	= 0,
-	  .driver_info		= UVC_QUIRK_APPEND_UVC_HEADER },
-	  /* Intel SR300 depth camera */
-	{ .match_flags		= USB_DEVICE_ID_MATCH_DEVICE
-				| USB_DEVICE_ID_MATCH_INT_INFO,
-	  .idVendor			= 0x8086,
-	  .idProduct		= 0x0aa5,
-	  .bInterfaceClass	= USB_CLASS_VIDEO,
-	  .bInterfaceSubClass	= 1,
-	  .bInterfaceProtocol	= 0,
-	  .driver_info		= UVC_QUIRK_APPEND_UVC_HEADER },
-	  /* Intel D405 S depth camera */
-	{ .match_flags		= USB_DEVICE_ID_MATCH_DEVICE
-				| USB_DEVICE_ID_MATCH_INT_INFO,
-	  .idVendor			= 0x8086,
-	  .idProduct		= 0x0b0c,
-	  .bInterfaceClass	= USB_CLASS_VIDEO,
-	  .bInterfaceSubClass	= 1,
-	  .bInterfaceProtocol	= 0,
-	  .driver_info		= UVC_QUIRK_APPEND_UVC_HEADER },
-	  /* Intel L500 depth camera */
-	{ .match_flags		= USB_DEVICE_ID_MATCH_DEVICE
-				| USB_DEVICE_ID_MATCH_INT_INFO,
-	  .idVendor			= 0x8086,
-	  .idProduct		= 0x0b0d,
-	  .bInterfaceClass	= USB_CLASS_VIDEO,
-	  .bInterfaceSubClass	= 1,
-	  .bInterfaceProtocol	= 0,
-	  .driver_info		= UVC_QUIRK_APPEND_UVC_HEADER },
-	  /* Intel D435i depth camera */
-	{ .match_flags		= USB_DEVICE_ID_MATCH_DEVICE
-				| USB_DEVICE_ID_MATCH_INT_INFO,
-	  .idVendor			= 0x8086,
-	  .idProduct		= 0x0b3a,
-	  .bInterfaceClass	= USB_CLASS_VIDEO,
-	  .bInterfaceSubClass	= 1,
-	  .bInterfaceProtocol	= 0,
-	  .driver_info		= UVC_QUIRK_APPEND_UVC_HEADER },
-	/* Intel D410/USB2 Depth camera */
-	{ .match_flags		= USB_DEVICE_ID_MATCH_DEVICE
-				| USB_DEVICE_ID_MATCH_INT_INFO,
-	  .idVendor			= 0x8086,
-	  .idProduct		= 0x0b15,
-	  .bInterfaceClass	= USB_CLASS_VIDEO,
-	  .bInterfaceSubClass	= 1,
-	  .bInterfaceProtocol	= 0,
-	  .driver_info		= UVC_QUIRK_APPEND_UVC_HEADER },
-	/* Intel D415/USB2 Depth camera */
-	{ .match_flags		= USB_DEVICE_ID_MATCH_DEVICE
-				| USB_DEVICE_ID_MATCH_INT_INFO,
-	  .idVendor			= 0x8086,
-	  .idProduct		= 0x0b16,
-	  .bInterfaceClass	= USB_CLASS_VIDEO,
-	  .bInterfaceSubClass	= 1,
-	  .bInterfaceProtocol	= 0,
-	  .driver_info		= UVC_QUIRK_APPEND_UVC_HEADER },
-	/* Intel D435/USB2 Depth camera */
-	{ .match_flags		= USB_DEVICE_ID_MATCH_DEVICE
-				| USB_DEVICE_ID_MATCH_INT_INFO,
-	  .idVendor			= 0x8086,
-	  .idProduct		= 0x0b17,
-	  .bInterfaceClass	= USB_CLASS_VIDEO,
-	  .bInterfaceSubClass	= 1,
-	  .bInterfaceProtocol	= 0,
-	  .driver_info		= UVC_QUIRK_APPEND_UVC_HEADER },
 	/* Generic USB Video Class */
 	{ USB_INTERFACE_INFO(USB_CLASS_VIDEO, 1, UVC_PC_PROTOCOL_UNDEFINED) },
 	{ USB_INTERFACE_INFO(USB_CLASS_VIDEO, 1, UVC_PC_PROTOCOL_15) },
diff --git a/drivers/media/usb/uvc/uvc_video.c b/drivers/media/usb/uvc/uvc_video.c
index 8494882614a7..1aa2579e7c41 100644
--- a/drivers/media/usb/uvc/uvc_video.c
+++ b/drivers/media/usb/uvc/uvc_video.c
@@ -1241,13 +1241,8 @@ static void uvc_video_decode_bulk(struct urb *urb, struct uvc_streaming *stream,
 		do {
 			ret = uvc_video_decode_start(stream, buf, mem, len);
 			if (ret == -EAGAIN)
-			{
-				if (stream->dev->quirks & UVC_QUIRK_APPEND_UVC_HEADER)
-				{
-					uvc_video_decode_data(stream, buf, stream->bulk.header,256);
-				}
-				buf = uvc_queue_next_buffer(&stream->queue,buf);
-			}
+				buf = uvc_queue_next_buffer(&stream->queue,
+							    buf);
 		} while (ret == -EAGAIN);
 
 		/* If an error occurred skip the rest of the payload. */
@@ -1279,13 +1274,9 @@ static void uvc_video_decode_bulk(struct urb *urb, struct uvc_streaming *stream,
 		if (!stream->bulk.skip_payload && buf != NULL) {
 			uvc_video_decode_end(stream, buf, stream->bulk.header,
 				stream->bulk.payload_size);
-			if (buf->state == UVC_BUF_STATE_READY) {
-				if (stream->dev->quirks & UVC_QUIRK_APPEND_UVC_HEADER) {
-					uvc_video_decode_data(stream, buf, stream->bulk.header,
-											stream->bulk.header_size);
-				}
-				buf = uvc_queue_next_buffer(&stream->queue, buf);
-			}
+			if (buf->state == UVC_BUF_STATE_READY)
+				buf = uvc_queue_next_buffer(&stream->queue,
+							    buf);
 		}
 
 		stream->bulk.header_size = 0;
diff --git a/drivers/media/usb/uvc/uvcvideo.h b/drivers/media/usb/uvc/uvcvideo.h
index 8df4f095f7c4..6df41c66cecd 100644
--- a/drivers/media/usb/uvc/uvcvideo.h
+++ b/drivers/media/usb/uvc/uvcvideo.h
@@ -138,57 +138,6 @@
 #define UVC_GUID_FORMAT_RW10 \
 	{ 'R',  'W',  '1',  '0', 0x00, 0x00, 0x10, 0x00, \
 	 0x80, 0x00, 0x00, 0xaa, 0x00, 0x38, 0x9b, 0x71}
-#define UVC_GUID_FORMAT_RAW8 \
-    { 'R',  'A',  'W',  '8', 0x66, 0x1a, 0x42, 0xa2, \
-     0x90, 0x65, 0xd0, 0x18, 0x14, 0xa8, 0xef, 0x8a}
-#define UVC_GUID_FORMAT_RW16 \
-    { 'R',  'W',  '1',  '6', 0x00, 0x00, 0x10, 0x00, \
-     0x80, 0x00, 0x00, 0xaa, 0x00, 0x38, 0x9b, 0x71}
-#define UVC_GUID_FORMAT_INVZ \
-	{ 'I',  'N',  'V',  'Z', 0x90, 0x2d, 0x58, 0x4a, \
-	 0x92, 0x0b, 0x77, 0x3f, 0x1f, 0x2c, 0x55, 0x6b}
-#define UVC_GUID_FORMAT_INZI \
-	{ 'I',  'N',  'Z',  'I', 0x66, 0x1a, 0x42, 0xa2, \
-	 0x90, 0x65, 0xd0, 0x18, 0x14, 0xa8, 0xef, 0x8a}
-#define UVC_GUID_FORMAT_INVR \
-	{ 'I',  'N',  'V',  'R', 0x90, 0x2d, 0x58, 0x4a, \
-	 0x92, 0x0b, 0x77, 0x3f, 0x1f, 0x2c, 0x55, 0x6b}
-#define UVC_GUID_FORMAT_INRI \
-	{ 'I',  'N',  'R',  'I', 0x90, 0x2d, 0x58, 0x4a, \
-	 0x92, 0x0b, 0x77, 0x3f, 0x1f, 0x2c, 0x55, 0x6b}
-#define UVC_GUID_FORMAT_INVI \
-	{ 'I',  'N',  'V',  'I', 0xdb, 0x57, 0x49, 0x5e, \
-	 0x8e, 0x3f, 0xf4, 0x79, 0x53, 0x2b, 0x94, 0x6f}
-#define UVC_GUID_FORMAT_RELI \
-	{ 'R',  'E',  'L',  'I', 0x14, 0x13, 0x43, 0xf9, \
-	 0xa7, 0x5a, 0xee, 0x6b, 0xbf, 0x01, 0x2e, 0x23}
-#define UVC_GUID_FORMAT_L8 \
-	{ '2', 0x00,  0x00,  0x00, 0x00, 0x00, 0x10, 0x00, \
-	 0x80, 0x00, 0x00, 0xaa, 0x00, 0x38, 0x9b, 0x71}
-#define UVC_GUID_FORMAT_L16 \
-	{ 'Q', 0x00,  0x00,  0x00, 0x00, 0x00, 0x10, 0x00, \
-	 0x80, 0x00, 0x00, 0xaa, 0x00, 0x38, 0x9b, 0x71}
-#define UVC_GUID_FORMAT_D16 \
-	{ 'P', 0x00,  0x00,  0x00, 0x00, 0x00, 0x10, 0x00, \
-	 0x80, 0x00, 0x00, 0xaa, 0x00, 0x38, 0x9b, 0x71}
-#define UVC_GUID_FORMAT_BAYER16 \
-    { 'R',  'W',  '1',  '6', 0x66, 0x1a, 0x42, 0xa2, \
-     0x90, 0x65, 0xd0, 0x18, 0x14, 0xa8, 0xef, 0x8a}
-#define UVC_GUID_FORMAT_W10 \
-    { 'W',  '1',  '0',  ' ', 0x00, 0x00, 0x10, 0x00, \
-	 0x80, 0x00, 0x00, 0xaa, 0x00, 0x38, 0x9b, 0x71}
-#define UVC_GUID_FORMAT_CONFIDENCE_MAP \
-	{ 'C',  ' ',  ' ',  ' ', 0x00, 0x00, 0x10, 0x00, \
-	0x80, 0x00, 0x00, 0xaa, 0x00, 0x38, 0x9b, 0x71}
-#define UVC_GUID_FORMAT_FG \
-	{ 'F',  'G',  ' ',  ' ', 0x00, 0x00, 0x10, 0x00, \
-	0x80, 0x00, 0x00, 0xaa, 0x00, 0x38, 0x9b, 0x71}
-#define UVC_GUID_FORMAT_INZC \
-	{ 'I',  'N',  'Z',  'C', 0x02, 0xb6, 0x0f, 0x48, \
-	0x97, 0x8c, 0xe4, 0xe8, 0x8a, 0xe8, 0x9b, 0x89}
-#define UVC_GUID_FORMAT_PAIR \
-	{ 'P',  'A',  'I',  'R', 0x36, 0x85, 0x41, 0x48, \
-	0xb6, 0xbf, 0x8f, 0xc6, 0xff, 0xb0, 0x83, 0xa8}
 
 /* ------------------------------------------------------------------------
  * Driver specific constants.
@@ -201,7 +150,7 @@
 /* Maximum number of packets per URB. */
 #define UVC_MAX_PACKETS		32
 /* Maximum status buffer size in bytes of interrupt URB. */
-#define UVC_MAX_STATUS_SIZE	32
+#define UVC_MAX_STATUS_SIZE	16
 
 #define UVC_CTRL_CONTROL_TIMEOUT	500
 #define UVC_CTRL_STREAMING_TIMEOUT	5000
@@ -223,7 +172,6 @@
 #define UVC_QUIRK_RESTORE_CTRLS_ON_INIT	0x00000400
 #define UVC_QUIRK_FORCE_Y8		0x00000800
 #define UVC_QUIRK_DISABLE_AUTOSUSPEND	0x00001000
-#define UVC_QUIRK_APPEND_UVC_HEADER	0x00011000
 
 /* Format flags */
 #define UVC_FMT_FLAG_COMPRESSED		0x00000001
diff --git a/drivers/media/usb/uvc/uvcvideo.h.rej b/drivers/media/usb/uvc/uvcvideo.h.rej
deleted file mode 100644
index 19c2b5d4dda7..000000000000
--- a/drivers/media/usb/uvc/uvcvideo.h.rej
+++ /dev/null
@@ -1,10 +0,0 @@
---- drivers/media/usb/uvc/uvcvideo.h
-+++ drivers/media/usb/uvc/uvcvideo.h
-@@ -222,6 +222,7 @@
- #define UVC_QUIRK_RESTRICT_FRAME_RATE	0x00000200
- #define UVC_QUIRK_RESTORE_CTRLS_ON_INIT	0x00000400
- #define UVC_QUIRK_FORCE_Y8		0x00000800
-+#define UVC_QUIRK_APPEND_UVC_HEADER	0x00001000
- 
- /* Format flags */
- #define UVC_FMT_FLAG_COMPRESSED		0x00000001
diff --git a/drivers/media/v4l2-core/v4l2-ioctl.c b/drivers/media/v4l2-core/v4l2-ioctl.c
index 3dd5ad1d7d4d..f7a7f9787366 100644
--- a/drivers/media/v4l2-core/v4l2-ioctl.c
+++ b/drivers/media/v4l2-core/v4l2-ioctl.c
@@ -1262,16 +1262,6 @@ static void v4l_fill_fmtdesc(struct v4l2_fmtdesc *fmt)
 	case V4L2_TCH_FMT_DELTA_TD08:	descr = "8-bit signed deltas"; break;
 	case V4L2_TCH_FMT_TU16:		descr = "16-bit unsigned touch data"; break;
 	case V4L2_TCH_FMT_TU08:		descr = "8-bit unsigned touch data"; break;
-	case V4L2_PIX_FMT_Y8I:		descr = "8-bit Greyscale L/R interleaved"; break;
-	case V4L2_PIX_FMT_Y12I:		descr = "12-bit Grey L/R interleaved"; break;
-	case V4L2_PIX_FMT_Z16:		descr = "16-bit Depth data"; break;
-	case V4L2_PIX_FMT_RW16:		descr = "16-bit Raw data"; break;
-	case V4L2_PIX_FMT_INZI:		descr = "32-bit IR:Depth 10:16"; break;
-	case V4L2_PIX_FMT_W10:		descr = "10-bit packed 8888[2222]"; break;
-	case V4L2_PIX_FMT_CONFIDENCE_MAP:	descr = "4-bit per pixel packed"; break;
-	case V4L2_PIX_FMT_FG:		descr = "Frame Grabber (FG  )"; break;
-	case V4L2_PIX_FMT_INZC:		descr = "Planar Depth/Confidence (INZC)"; break;
-	case V4L2_PIX_FMT_PAIR:		descr = "Relative IR (PAIR)"; break;
 
 	default:
 		/* Compressed formats */
diff --git a/firmware/tegra21x_xusb_firmware b/firmware/tegra21x_xusb_firmware
deleted file mode 100644
index 9930bfa7edd0..000000000000
Binary files a/firmware/tegra21x_xusb_firmware and /dev/null differ
diff --git a/include/linux/hid-sensor-ids.h b/include/linux/hid-sensor-ids.h
index 063aa1f103bf..f2ee90aed0c2 100644
--- a/include/linux/hid-sensor-ids.h
+++ b/include/linux/hid-sensor-ids.h
@@ -95,7 +95,6 @@
 #define HID_USAGE_SENSOR_TIME_HOUR				0x200525
 #define HID_USAGE_SENSOR_TIME_MINUTE				0x200526
 #define HID_USAGE_SENSOR_TIME_SECOND				0x200527
-#define HID_USAGE_SENSOR_TIME_TIMESTAMP			0x200529
 
 /* Units */
 #define HID_USAGE_SENSOR_UNITS_NOT_SPECIFIED			0x00
diff --git a/include/uapi/linux/videodev2.h b/include/uapi/linux/videodev2.h
index 2b88a70383ea..f4adb1ca1e1d 100644
--- a/include/uapi/linux/videodev2.h
+++ b/include/uapi/linux/videodev2.h
@@ -641,18 +641,6 @@ struct v4l2_pix_format {
 #define V4L2_PIX_FMT_Y8I      v4l2_fourcc('Y', '8', 'I', ' ') /* Greyscale 8-bit L/R interleaved */
 #define V4L2_PIX_FMT_Y12I     v4l2_fourcc('Y', '1', '2', 'I') /* Greyscale 12-bit L/R interleaved */
 #define V4L2_PIX_FMT_Z16      v4l2_fourcc('Z', '1', '6', ' ') /* Depth data 16-bit */
-#define V4L2_PIX_FMT_Y16      v4l2_fourcc('Y', '1', '6', ' ') /* Greyscale 16-bit */
-#define V4L2_PIX_FMT_RW16     v4l2_fourcc('R', 'W', '1', '6') /* Raw data 16-bit */
-#define V4L2_PIX_FMT_INZI     v4l2_fourcc('I', 'N', 'Z', 'I') /* 24 Depth/IR 16:8 */
-#define V4L2_PIX_FMT_INVR     v4l2_fourcc('I', 'N', 'V', 'R') /* 16 Depth */
-#define V4L2_PIX_FMT_INRI     v4l2_fourcc('I', 'N', 'R', 'I') /* 24 Depth/IR 16:8 */
-#define V4L2_PIX_FMT_RELI     v4l2_fourcc('R', 'E', 'L', 'I') /* 8 IR alternating on off illumination */
-#define V4L2_PIX_FMT_W10      v4l2_fourcc('W', '1', '0', ' ') /* Packed raw data 10-bit */
-#define V4L2_PIX_FMT_CONFIDENCE_MAP  v4l2_fourcc('C', ' ', ' ', ' ') /* Two pixels in one byte */
-/*  Librealsense development*/
-#define V4L2_PIX_FMT_FG	v4l2_fourcc('F', 'G', ' ', ' ') /* Frame Grabber */
-#define V4L2_PIX_FMT_INZC	v4l2_fourcc('I', 'N', 'Z', 'C') /* Planar Depth/Confidence */
-#define V4L2_PIX_FMT_PAIR	v4l2_fourcc('P', 'A', 'I', 'R') /* Relative IR */
 
 /* SDR formats - used only for Software Defined Radio devices */
 #define V4L2_SDR_FMT_CU8          v4l2_fourcc('C', 'U', '0', '8') /* IQ u8 */
